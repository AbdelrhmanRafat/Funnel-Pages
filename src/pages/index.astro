---
import "../styles/global.css";
import Layout from "../layouts/Layout.astro";
import ClassicComponent from "../components/Themes/Classic/ClassicComponent.astro";
import { getThemeFromString } from "../lib/utils/ThemeSelect";
import { FunnelDataType, getFunnelPage } from "../lib/api/funnel";
import { Theme } from "../lib/constants/themes";
import type { FunnelRes } from "../lib/api/types";
import NasaComponent from "../components/Themes/Nasa/NasaComponent.astro";

// 1. Get 'type' from query param
const urlParams = Astro.url.searchParams;
const typeParam = urlParams.get("type") as FunnelDataType | null;

// 2. Validate the param or fallback
const dataType: FunnelDataType = Object.values(FunnelDataType).includes(typeParam as FunnelDataType)
  ? (typeParam as FunnelDataType)
  : FunnelDataType.CLASSIC_DEFAULT;

// 3. Fetch the funnel data based on query param
const funnelPage: FunnelRes = await getFunnelPage(dataType);

// 4. Prepare required values
const strTheme: string = funnelPage.data.theme;
const enumTheme: Theme | undefined = getThemeFromString(strTheme);
const meta = funnelPage.data.product.meta;
const facebookPixelID = funnelPage.data.facebookPixelId;
const twitterPixelID = funnelPage.data.twitterPixelId;
const snapchatPixelID = funnelPage.data.snapchatPixelId;
const tiktokPixelID = funnelPage.data.tiktokPixelId;

---

<Layout
  metadata={meta}
  strThemeName={strTheme}
  themeCss={funnelPage.data.themeCss}
  facebookPixelID={facebookPixelID}
  twitterPixelID={twitterPixelID}
  snapchatPixelID={snapchatPixelID}
  tiktokPixelID={tiktokPixelID}
>
  {
    (() => {
      switch (enumTheme) {
        case Theme.Classic:
          return <ClassicComponent funnelPage={funnelPage.data} />;
          case Theme.Nasa:
          return <NasaComponent funnelPage={funnelPage.data} />;
        default:
          return <p>Theme not found</p>;
      }
    })()
  }
</Layout>