---
import "../styles/global.css";
import Layout from "../layouts/Layout.astro";
import ClassicComponent from "../components/Themes/Classic/ClassicComponent.astro";

import { getFunnelPage } from "../lib/api/funnel";
import { getThemeFromString } from "../lib/utils/ThemeSelect";
import type { FunnelRes } from "../lib/api/types";
import { Theme } from "../lib/constants/themes";

// === 1. Read query params ===
const urlParams = Astro.url.searchParams;
const themeName = urlParams.get("themeName") ?? "classic";
const page = urlParams.get("page") ?? "classic_WithVariantsWithBundles";

// === 2. Fetch data from API ===
const funnelPage: FunnelRes = await getFunnelPage(themeName, page);

// === 3. Prepare required values ===
const strTheme: string = funnelPage.data.theme;
const enumTheme: Theme | undefined = getThemeFromString(strTheme);
const meta = funnelPage.data.product.meta;
const facebookPixelID = funnelPage.data.facebookPixelId;
const twitterPixelID = funnelPage.data.twitterPixelId;
const snapchatPixelID = funnelPage.data.snapchatPixelId;
const tiktokPixelID = funnelPage.data.tiktokPixelId;
---

<Layout
  metadata={meta}
  strThemeName={strTheme}
  themeCss={funnelPage.data.themeCss}
  facebookPixelID={facebookPixelID}
  twitterPixelID={twitterPixelID}
  snapchatPixelID={snapchatPixelID}
  tiktokPixelID={tiktokPixelID}
>
  {
    (() => {
      switch (enumTheme) {
        case Theme.Classic:
          return <ClassicComponent funnelPage={funnelPage.data} />;
        default:
          return <p>ðŸš« Theme not supported</p>;
      }
    })()
  }
</Layout>