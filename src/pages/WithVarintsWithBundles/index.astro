---
// This file is the main page that fetches data, determines the theme, and renders the appropriate theme component.
import "../../styles/global.css"
import Layout from "../../layouts/Layout.astro";
import ClassicComponent from "../../components/Themes/Classic/ClassicComponent.astro";
import { getThemeFromString } from "../../lib/utils/ThemeSelect";
import { FunnelDataType, getFunnelPage } from "../../lib/api/funnel";
import { Theme } from "../../lib/constants/themes";
import type { FunnelRes } from "../../lib/api/types";

// Fetches the funnel page data from the API.
const funnelPage: FunnelRes = await getFunnelPage(FunnelDataType.PRODUCT_WITH_VARIANTS_AND_BUNDLES);
// Gets the theme name string from the API response.
const strTheme: string = funnelPage.data.theme;
// Converts the theme string to a Theme enum value.
const enumTheme: Theme | undefined = getThemeFromString(strTheme);
const meta = funnelPage.data.product.meta; 
const facebookPixelID = funnelPage.data.facebookPixelId;
const twitterPixelID = funnelPage.data.twitterPixelId;
const snapchatPixelID = funnelPage.data.snapchatPixelId;
const tiktokPixelID = funnelPage.data.tiktokPixelId;
---
<Layout metadata={meta} strThemeName={strTheme} themeCss={funnelPage.data.themeCss} facebookPixelID={facebookPixelID} twitterPixelID={twitterPixelID} snapchatPixelID={snapchatPixelID} tiktokPixelID={tiktokPixelID}>
  {
    (() => {
      // Selects and renders the appropriate theme component based on the Theme enum value.
      switch (enumTheme) {
        case Theme.Classic:
          return <ClassicComponent funnelPage={funnelPage.data} />;
        default:
          return <p>Theme not found</p>;
      }
    })()
  }
</Layout>
