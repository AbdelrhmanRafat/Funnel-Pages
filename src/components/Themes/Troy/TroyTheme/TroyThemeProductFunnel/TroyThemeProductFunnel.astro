---
import "./troyThemeProductFunnel.css";
import type { BlockData, OptionOption } from "../../../../../lib/api/types";

const data: BlockData[] = Astro.props.data;
const colorSizeOptions = Astro.props.colorSizeOptions;

const initialOffer = data[0];

import { getTranslation } from "../../../../../lib/utils/i18n/translations";
import troyQuantityOptions from "../UI/troyQuantityOptions/troyQuantityOptions.astro";
import { FunneltroyComponents } from "../../../../../lib/constants/themes";

// Component configuration
const autoUpdate = Astro.props.autoUpdate ?? true;
const showDiscountWhenZero = Astro.props.showDiscountWhenZero ?? false;
const currency = Astro.props.currency ?? getTranslation('productFunnel.currency');
---

<div id={FunneltroyComponents.troyProductFunnel} class="w-full flex flex-col gap-2">
  <troyQuantityOptions data={data} colorSizeOptions={colorSizeOptions} />

  <troy-product-funnel 
    data-funnel-auto-update={autoUpdate}
    data-funnel-show-discount-when-zero={showDiscountWhenZero}
    data-funnel-currency={currency}
    data-funnel-initial-offer={JSON.stringify(initialOffer)}
  >
    <div class="troy-purchase-options">
      <div class="troy-purchase-options-body">
        <div class="troy-purchase-options-content space-y-3">
          <div class="troy-purchase-row flex justify-between items-center">
            <span class="troy-purchase-label" data-translate="productFunnel.quantity">
              {getTranslation('productFunnel.quantity')}
            </span>
            <div>
              <span class="troy-purchase-value" data-funnel-price-quantity></span>
              <span data-translate="productFunnel.piece">
                {getTranslation('productFunnel.piece')}
              </span>
            </div>
          </div>
          
          <div class="troy-purchase-row flex justify-between items-center">
            <span class="troy-purchase-label" data-translate="productFunnel.unitPrice">
              {getTranslation('productFunnel.unitPrice')}
            </span>
            <span class="troy-purchase-value" data-funnel-price-unit>
              {initialOffer.price_per_item.toLocaleString()} {getTranslation('productFunnel.currency')}
            </span>
          </div>
          
          <div class="troy-purchase-row flex justify-between items-center">
            <span class="troy-purchase-label" data-translate="productFunnel.subtotal">
              {getTranslation('productFunnel.subtotal')}
            </span>
            <span class="troy-purchase-value" data-funnel-price-subtotal>
              {initialOffer.total_price.toLocaleString()} {getTranslation('productFunnel.currency')}
            </span>
          </div>
          
          <div class="troy-purchase-row flex justify-between items-center">
            <span class="troy-purchase-label" data-translate="productFunnel.shippingCost">
              {getTranslation('productFunnel.shippingCost')}
            </span>
            <span class="troy-purchase-value" data-funnel-price-shipping>
              {initialOffer.shipping_price.toLocaleString()} {getTranslation('productFunnel.currency')}
            </span>
          </div>
          
          <div 
            class:list={[
              "troy-purchase-row flex justify-between items-center border-b-gray-200",
              { "hidden": initialOffer.discount === 0 && !showDiscountWhenZero }
            ]}
            data-funnel-discount-container
          >
            <span class="troy-purchase-label" data-translate="productFunnel.discount">
              {getTranslation('productFunnel.discount')}
            </span>
            <span class="troy-purchase-discount" data-funnel-price-discount>
              - {initialOffer.discount.toLocaleString()} {getTranslation('productFunnel.currency')}
            </span>
          </div>
        </div>
        
        <div class="troy-purchase-total-section">
          <div class="flex justify-between items-center">
            <span class="troy-purchase-total-label" data-translate="productFunnel.total">
              {getTranslation('productFunnel.total')}
            </span>
            <span class="troy-purchase-total-value" data-funnel-price-total>
              {initialOffer.final_total.toLocaleString()} {getTranslation('productFunnel.currency')}
            </span>
          </div>
        </div>
      </div>
    </div>
  </troy-product-funnel>
</div>

<script>
  import { initProductFunnel } from "./troyThemeProductFunnel";
  initProductFunnel();
</script>