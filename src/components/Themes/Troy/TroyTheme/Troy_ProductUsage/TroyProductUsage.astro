---
// server-side code
import "./TroyProductUsage.css";
import type { BlockData, VideoInfo } from "../../../../../lib/api/types";
import { FunnelTroyComponents } from "../../../../../lib/constants/themes";

function convertToEmbed(link: string) {
  if (link.includes("youtube.com/watch?v=")) {
    const id = new URL(link).searchParams.get("v");
    return `https://www.youtube.com/embed/${id}`;
  }
  return link; // Already in embed format or from another platform
}

const data: BlockData = Astro.props.data;
const productUsage: VideoInfo[] = data.productUsage ?? [];
---

<section id={FunnelTroyComponents.TroyProductUsage} class="troy-section">
    <!-- Header -->
    <div class="troy-section-header">
        <i class={data.icon}></i>
        <h5>{data.title}</h5>
    </div>
    
    <!-- Video Grid -->
    <div class={`grid grid-cols-1 gap-x-2 gap-y-4 md:grid-cols-3`}>
        {
            productUsage.map((video) => (
                <div class="troy-usage-card overflow-hidden">
                    <div class="troy-usage-video relative">
                        <iframe
                            class="troy-usage-iframe w-full h-[300px] lg:h-[620px]"
  src={convertToEmbed(video.link)}
                            title={video.title}
                            allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture"
                            allowfullscreen
                        >
                      </iframe>
                    </div>
                    <div class="troy-usage-content p-3">
                        <h3 class="troy-usage-title font-medium text-base mb-1">
                            {video.title}
                        </h3>
                        <p class="troy-usage-subtitle text-sm mb-2">
                            {video.subtitle}
                        </p>
                    </div>
                </div>
            ))
        }
    </div>
</section>