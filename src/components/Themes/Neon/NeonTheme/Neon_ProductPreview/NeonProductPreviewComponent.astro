---
// This component renders a preview of the product for the Classic theme.
// Props:
// - data: An object of type BlockData, containing product preview information.
import "./NeonProductPreviewComponent.css"
import type { BlockData, VideoInfoItem } from "../../../../../lib/api/types";
import type { Language } from "../../../../../lib/utils/i18n/translations";
import NeonBuyNowButton from "../UI/NeonBuyNowButton/NeonBuyNowButton.astro";
import { FunnelNeonComponents } from "../../../../../lib/constants/themes";
import type { Item } from "../../../../../lib/api/types";
import LucideIcon from "../../../../Shared/LucideIcon.astro";

// Get initial language from cookie during SSR
const currentLang: Language = (Astro.cookies.get("lang")?.value || "en") as Language;
const isArabic = currentLang === "ar";

const data: BlockData = Astro.props.data;
const productPreview: VideoInfoItem | undefined = data.videoInfo?.[0];
const items: Item[] = data.items ?? [];
---

<section 
  id={FunnelNeonComponents.NeonProductPreview} 
  class="neon-section"
>
  <!-- Header -->
  <div class="neon-section-header">
    {data.icon && <LucideIcon name={data.icon as any} width="48" height="48" />}
    <h5>{isArabic ? data.title_ar : data.title_en}</h5>
  </div>
  
  <!-- Main Content -->
  <div class="flex flex-col lg:flex-row gap-6 lg:gap-8 items-stretch">
    <!-- Video Section (3/5 width on desktop) -->
    <div class="w-full lg:w-3/5 order-2 lg:order-1">
      <div class="neon-product-preview-video-container border-4 overflow-hidden relative">
        {productPreview?.videoLink ? (
          <iframe
            class="w-full h-full rounded-[inherit]"
            src={productPreview.videoLink}
            title={productPreview.videoTitle || "Product video"}
            allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture"
            allowfullscreen
            loading="lazy"
          >
          </iframe>
        ) : (
          <div class="w-full h-full flex items-center justify-center bg-gray-200 text-gray-500 rounded-[inherit]">
            <span>Video not available</span>
          </div>
        )}
        
        {productPreview?.videoTitle && (
          <div class="neon-product-preview-video-title absolute bottom-4 right-4 text-xl sm:text-2xl lg:text-3xl font-bold z-10">
            <p>{productPreview.videoTitle}</p>
          </div>
        )}
      </div>
    </div>
    
    <!-- Features Section (2/5 width on desktop) -->
    <div class="w-full lg:w-2/5 order-1 lg:order-2">
      <div class="neon-product-preview-features-container h-full flex flex-col">
        <!-- Features Header -->
        {productPreview?.title && (
          <div class="neon-product-preview-features-header border-b pb-4 mb-6">
            <div class="flex flex-col gap-3 sm:flex-row sm:justify-between sm:items-center sm:gap-4">
              <h2 class="neon-product-preview-features-title text-xl sm:text-2xl font-bold">
                {productPreview.title}
              </h2>
              {productPreview?.viewsText && (
                <div class="neon-product-preview-views-badge w-fit flex-shrink-0 py-2 px-4 text-sm sm:text-base flex items-center gap-2">
                  {productPreview.viewsIcon && (
                  <LucideIcon name={productPreview.viewsIcon as any} width="32" height="32" /> 
                  )}
                  <span class="truncate">{productPreview.viewsText}</span>
                </div>
              )}
            </div>
          </div>
        )}
        
        <!-- Feature List -->
        <div class="flex-1 space-y-6">
          {items.map((feature) => (
            <div class="neon-product-preview-feature-item flex items-start gap-4">
              <div class="neon-product-preview-feature-icon rounded-full flex-shrink-0 flex items-center justify-center">
                {feature.icon && <LucideIcon name={feature.icon as any} width="32" height="32" />}
              </div>
              <div class="neon-product-preview-feature-content flex-1 min-w-0 text-right">
                <div class="neon-product-preview-feature-title font-semibold text-base leading-snug">
                  {feature.label}
                </div>
                <div class="neon-product-preview-feature-subtitle text-sm leading-relaxed mt-2">
                  {feature.content}
                </div>
              </div>
            </div>
          ))}
        </div>
        
        <!-- Buy Now Button -->
        <div class="mt-6 pt-6 border-t border-gray-200">
          <NeonBuyNowButton />
        </div>
      </div>
    </div>
  </div>
</section>