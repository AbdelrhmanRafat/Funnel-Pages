---
import "./NeonOrderConfirmationNotice.css";
import type { BlockData, Item } from "../../../../../lib/api/types";
import { FunnelNeonComponents } from "../../../../../lib/constants/themes";
import type { Language } from "../../../../../lib/utils/i18n/translations";
import LucideIcon from "../../../../Shared/LucideIcon.astro";

const data: BlockData = Astro.props.data;
const confirmationNotices: Item[] = data.items ?? [];
// Get initial language from cookie during SSR
const currentLang: Language = (Astro.cookies.get("lang")?.value || "ar") as Language;
const isArabic = currentLang === "ar";
const title = isArabic ? data.title_ar : data.title_en;
---

<section 
  id={FunnelNeonComponents.NeonOrderConfirmationNotice} 
  class="w-full"
>
  <div class="neon-order-confirmation-notice text-start md:text-center py-6 px-4">
    <p class="neon-order-confirmation-title mb-4 text-lg font-semibold">
      {title}
    </p>
    <div class="flex flex-col justify-start items-start gap-4 md:flex-row md:justify-center md:items-center md:gap-8 text-sm">
      {confirmationNotices.map((item, index) => (
        <div class="flex items-center gap-3 md:gap-2">
          <div class="neon-order-confirmation-icon flex justify-center items-center rounded-full w-8 h-8 flex-shrink-0">
            {data.icon && <LucideIcon name={data.icon as any} width="15" height="15" />} 
          </div>
          <span class="font-medium">
            {item.label}
          </span>
        </div>
      ))}
    </div>
  </div>
</section>