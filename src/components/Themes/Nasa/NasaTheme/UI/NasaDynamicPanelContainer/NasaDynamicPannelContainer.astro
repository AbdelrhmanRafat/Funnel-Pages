---
import type { OptionOption } from "../../../../../../lib/api/types";
import { getTranslation } from "../../../../../../lib/utils/i18n/translations";
import "./NasaDynamicPannelContainer.css"

const colorSizeOptions: OptionOption[] = Astro.props.colorSizeOptions;
const panelIndex: number = Astro.props["panel-index"] || 1;
const colors: OptionOption | undefined = colorSizeOptions.find(opt => opt.name === 'color');
const sizes: OptionOption | undefined = colorSizeOptions.find(opt => opt.name === 'size');

// Component configuration
const allowMultipleSelection = Astro.props.allowMultipleSelection ?? false;
const showSelectionIndicators = Astro.props.showSelectionIndicators ?? true;
const enableAutoSelect = Astro.props.enableAutoSelect ?? false; // Auto-select first option
---
<div id="nasa-pannel-container" class="nasa-pannel-container">
  <nasa-select-options 
    data-options-panel-index={panelIndex}
    data-options-allow-multiple={allowMultipleSelection}
    data-options-show-indicators={showSelectionIndicators}
    data-options-auto-select={enableAutoSelect}
  >
    <div class="option-panel nasa-option-panel p-4 rounded-xl sm:rounded-3xl border">
      <!-- Updated Header with Selection Indicators -->
      <div class="flex flex-col sm:flex-row justify-between items-start sm:items-center gap-3 sm:gap-0">
        <div class="nasa-panel-header font-bold text-lg sm:text-xl">
          <p class="inline" data-translate="dynamicPanel.selectOptionsForProduct">
          </p>
          <span data-options-panel-index-display>{panelIndex}</span>
        </div>
        {showSelectionIndicators && (
          <div class="flex flex-col sm:flex-row gap-2 w-full sm:w-auto">
            <div class="nasa-selection-indicator flex items-center gap-1 justify-center sm:justify-start py-1 px-3 rounded-full text-xs sm:text-sm">
              <span data-translate="dynamicPanel.color">{getTranslation('dynamicPanel.color')}</span>
              <span data-options-selected-color></span>
            </div>
            <div class="nasa-selection-indicator flex items-center gap-1 justify-center sm:justify-start py-1 px-3 rounded-full text-xs sm:text-sm">
              <span data-translate="dynamicPanel.size">{getTranslation('dynamicPanel.size')}</span>
              <span data-options-selected-size></span>
            </div>
          </div>
        )}
      </div>
      
      <div class="py-2 md:py-1 flex flex-col justify-center md:justify-between items-start md:items-start md:flex-row">
        <!-- Size Selection -->
        <div class="select-size-section space-y-2">
          <p class="nasa-selection-title text-base sm:text-lg font-semibold" data-translate="dynamicPanel.size">{getTranslation('dynamicPanel.size')}</p>
          <div class="grid grid-cols-3 sm:flex gap-2 sm:gap-4">
            {
              Array.isArray(sizes?.value) && sizes.value.map((size, index) => (
                <div
                  class="size-option nasa-size-option py-2 px-3 sm:py-2.5 sm:px-5 border rounded-lg sm:rounded-xl cursor-pointer text-xs sm:text-sm font-medium text-center"
                  data-options-size-option
                  data-options-size-value={size.value}
                  data-options-size-index={index}
                >
                  {size.display}
                </div>
              ))
            }
          </div>
        </div>
               
        <!-- Color Selection -->
        <div class="select-color-section space-y-2">
          <p class="nasa-selection-title text-base sm:text-lg font-semibold" data-translate="dynamicPanel.color">{getTranslation('dynamicPanel.color')}</p>
          <div class="grid grid-cols-4 sm:flex gap-4 sm:gap-6 justify-items-center">
            {
              Array.isArray(colors?.value) && colors.value.map((color, index) => (
                <div
                  class="color-option flex flex-col items-center gap-1 cursor-pointer hover:scale-105 transition-transform"
                  data-options-color-option
                  data-options-color-name={color.name}
                  data-options-color-hex={color.hex}
                  data-options-color-index={index}
                >
                  <div
                    class="nasa-color-swatch w-8 h-8 sm:w-9 sm:h-9 rounded-full border-2"
                    style={`background-color: ${color.hex}`}
                  ></div>
                  <span class="nasa-color-name text-xs sm:text-sm text-center">{color.name}</span>
                </div>
              ))
            }
          </div>
        </div>
      </div>
    </div>
  </nasa-select-options>
</div>

<script>
  import "./NasaDynamicPannelContainer";
</script>