---
import NasaThemeHeader from "./NasaTheme/NasaThemeHeader.astro";
import NasaThemeCountDown from "./NasaTheme/NasaThemeCountDown.astro";
import NasaThemeFormFields from "./NasaTheme/NasaThemeFormFields.astro";
import NasaThemeTodayOrders from "./NasaTheme/NasaThemeTodayOrders.astro";
import NasaThemeProductFunnel from "./NasaTheme/NasaThemeProductFunnel.astro";
import NasaThemeFooter from "./NasaTheme/NasaThemeFooter.astro";

import { FunnelNasaComponents } from '../../../Interfaces/Themes';
import type { Data, BlockData } from "../../../Interfaces/Products";
import { getNasaThemeComponent } from "../../../Services/ThemesSelectService";
import NasaThemeProduct from "./NasaTheme/NasaThemeProduct.astro";

interface ComponentCheckResult {
  isComponentFound: boolean;
  componentData: BlockData | undefined;
}

const funnelPage = (Astro.props as { funnelPage: Data }).funnelPage;

const classicComponentNames: [FunnelNasaComponents, BlockData][] = funnelPage.blocks
  .map(block => {
    const component = getNasaThemeComponent(block.name);
    return component ? [component, block.data] : undefined;
  })
  .filter((tuple): tuple is [FunnelNasaComponents, BlockData] => tuple !== undefined);

function isComponentFound(componentName: FunnelNasaComponents): ComponentCheckResult {
  const found = classicComponentNames.find(([comp]) => comp === componentName);
  return {
    isComponentFound: !!found,
    componentData: found?.[1]
  };
}
---

{isComponentFound(FunnelNasaComponents.NasaHeader).isComponentFound && (
  <NasaThemeHeader data={isComponentFound(FunnelNasaComponents.NasaHeader).componentData} />
)}

<NasaThemeProduct Product={funnelPage.product} />

{isComponentFound(FunnelNasaComponents.NasaFormFields).isComponentFound && (
  <NasaThemeFormFields data={isComponentFound(FunnelNasaComponents.NasaFormFields).componentData} />
)}

{isComponentFound(FunnelNasaComponents.NasaCountdown).isComponentFound && (
  <NasaThemeCountDown data={isComponentFound(FunnelNasaComponents.NasaCountdown).componentData} />
)}

{isComponentFound(FunnelNasaComponents.NasaTodayOrders).isComponentFound && (
  <NasaThemeTodayOrders data={isComponentFound(FunnelNasaComponents.NasaTodayOrders).componentData} />
)}

{isComponentFound(FunnelNasaComponents.NasaProductFunnel).isComponentFound && (
  <NasaThemeProductFunnel data={isComponentFound(FunnelNasaComponents.NasaProductFunnel).componentData} />
)}

{isComponentFound(FunnelNasaComponents.NasaFooter).isComponentFound && (
  <NasaThemeFooter data={isComponentFound(FunnelNasaComponents.NasaFooter).componentData} />
)}