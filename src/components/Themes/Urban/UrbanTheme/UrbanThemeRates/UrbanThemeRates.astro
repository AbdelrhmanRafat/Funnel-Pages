---
import "./UrbanThemeRates.css";
import type { BlockData } from '../../../../../lib/api/types';
import { getTranslation, type Language } from '../../../../../lib/utils/i18n/translations';
import { FunnelUrbanComponents } from "../../../../../lib/constants/themes";

const ratingData: BlockData = Astro.props.ratingData;

function generateStars(rating: number) {
  const stars = [];
  const fullStars = Math.floor(rating);
  const hasHalfStar = rating % 1 !== 0;
  const emptyStars = 5 - Math.ceil(rating);

  for (let i = 0; i < fullStars; i++) {
    stars.push({ type: 'full', key: `full-${i}` });
  }

  if (hasHalfStar) {
    stars.push({ type: 'half', key: 'half' });
  }

  for (let i = 0; i < emptyStars; i++) {
    stars.push({ type: 'empty', key: `empty-${i}` });
  }

  return stars;
}

const rating = Array.isArray(ratingData?.items) && ratingData.items.length > 0
  ? parseFloat(ratingData.items[0].number ?? "0")
  : 0;

const stars = generateStars(rating);

// Get initial language from cookie during SSR
const currentLang: Language = (Astro.cookies.get("lang")?.value || "en") as Language;
const isArabic = currentLang === "ar";
---

<div id={FunnelUrbanComponents.UrbanRates} class="urban-rates">
  <div class="urban-rating-display" style={isArabic ? "direction: rtl;" : "direction: ltr;"}>
    {(isArabic ? [...stars].reverse() : stars).map((star) => (
      <span key={star.key}>
        {star.type === 'full' && (
          <svg
            class="urban-rating-star-full"
            xmlns="http://www.w3.org/2000/svg"
            viewBox="0 0 24 24"
            width="20"
            height="20"
          >
            <path
              d="M12 .587l3.668 7.431 8.2 1.191-5.934 5.782
                1.402 8.172L12 18.896l-7.336 3.867
                1.402-8.172L.132 9.209l8.2-1.191z"
              fill="currentColor"
            />
          </svg>
        )}
        {star.type === 'half' && (
          <svg
            class="urban-rating-star-half"
            xmlns="http://www.w3.org/2000/svg"
            viewBox="0 0 24 24"
            width="20"
            height="20"
          >
            <defs>
              <linearGradient id="halfGradient">
                <stop offset="50%" stop-color="currentColor" />
                <stop offset="50%" stop-color="var(--urban-color-outline)" />
              </linearGradient>
            </defs>
            <path
              d="M12 .587l3.668 7.431 8.2 1.191-5.934 5.782
                1.402 8.172L12 18.896l-7.336 3.867
                1.402-8.172L.132 9.209l8.2-1.191z"
              fill="url(#halfGradient)"
            />
          </svg>
        )}
        {star.type === 'empty' && (
          <svg
            class="urban-rating-star-empty"
            xmlns="http://www.w3.org/2000/svg"
            viewBox="0 0 24 24"
            width="20"
            height="20"
          >
            <path
              d="M12 .587l3.668 7.431 8.2 1.191-5.934 5.782
                1.402 8.172L12 18.896l-7.336 3.867
                1.402-8.172L.132 9.209l8.2-1.191z"
              fill="currentColor"
            />
          </svg>
        )}
      </span>
    ))}
    <span class="urban-rating-number">({rating})</span>
  </div>
</div>