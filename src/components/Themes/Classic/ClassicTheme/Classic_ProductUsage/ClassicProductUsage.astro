---
// server-side code
import "./ClassicProductUsage.css";
import type { BlockData, VideoInfoItem } from "../../../../../lib/api/types";
import type { Language } from "../../../../../lib/utils/i18n/translations";
import { FunnelClassicComponents } from "../../../../../lib/constants/themes";
import LucideIcon from "../../../../Shared/LucideIcon.astro";

// Get initial language from cookie during SSR
const currentLang: Language = (Astro.cookies.get("lang")?.value || "en") as Language;
const isArabic = currentLang === "ar";

function convertToEmbed(link: string) {
  if (link.includes("youtube.com/watch?v=")) {
    const id = new URL(link).searchParams.get("v");
    return `https://www.youtube.com/embed/${id}`;
  }
  return link; // Already in embed format or from another platform
}

const data: BlockData = Astro.props.data;
const productUsage: VideoInfoItem[] = data.videoInfo ?? [];
---

<section 
  id={FunnelClassicComponents.ClassicProductUsage} 
  class="classic-section"
>
  <!-- Header -->
  <div class="classic-section-header">
    {data.icon && <LucideIcon name={data.icon as any} width="32" height="32" />}
    <h5>{isArabic ? data.title_ar : data.title_en}</h5>
  </div>
  
  <!-- Video Container with Flex Layout -->
  {productUsage.length > 0 ? (
    <div class="flex flex-wrap justify-center gap-6">
      {productUsage.map((video, index) => (
        <div class="classic-usage-card overflow-hidden flex-shrink-0 w-full  md:w-1/3 lg:w-[420px]">
          <div class="classic-usage-video relative">
            {video.videoLink ? (
              <iframe
                class="classic-usage-iframe w-full h-48 sm:h-56 md:h-[530px]"
                src={convertToEmbed(video.videoLink)}
                title={video.title || `Product usage video ${index + 1}`}
                allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture"
                allowfullscreen
                loading="lazy"
              />
            ) : (
              <div class="classic-usage-video-placeholder w-full h-48 sm:h-56 md:h-64 lg:h-80 xl:h-96 flex items-center justify-center">
                <span class="text-base">Video not available</span>
              </div>
            )}
          </div>
          <div class="classic-usage-content p-4">
            <h3 class="classic-usage-title text-lg md:text-xl font-medium mb-3 leading-snug">
              {video.title || 'Product Usage Video'}
            </h3>
            {video.subtitle && (
              <p class="classic-usage-subtitle text-base md:text-lg leading-relaxed">
                {video.subtitle}
              </p>
            )}
          </div>
        </div>
      ))}
    </div>
  ) : (
    <div class="text-center py-8">
      <p class="text-gray-500">No usage videos available</p>
    </div>
  )}
</section>