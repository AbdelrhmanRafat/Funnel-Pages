---
import "./ClassicQuantityOptions.css";
import type { BlockData, OptionOption } from "../../../../../../lib/api/types";
import { getTranslation } from "../../../../../../lib/utils/i18n/translations";
import ClassicDynamicPannelContainer from "../ClassicDynamicPanelContainer/ClassicDynamicPannelContainer.astro";

const data: BlockData[] = Astro.props.data;
const colorSizeOptions: OptionOption[] = Astro.props.colorSizeOptions;
const name = "qty";
---

<div id="classic-quantity-selection">
  <h3
    class="classic-quantity-title text-2xl py-3"
    data-translate="quantityOptions.chooseQuantity"
  >
    {getTranslation("quantityOptions.chooseQuantity")}
  </h3>

  <div class="space-y-3">
    {
      data.map((item, index) => (
        <div class="quantity-option-group">
          <div class="classic-quantity-option-group">
            <label
              class="classic-quantity-option-label group mb-1"
              for={`${name}${index + 1}`}
            >
              <input
                type="radio"
                id={`${name}${index + 1}`}
                name={name}
                class="hidden"
                checked={index === 0}
                selected-item={JSON.stringify(item)}
                data-items={item.items}
              />
              <div class="classic-quantity-option-content">
                <div class="classic-quantity-option-header flex flex-col sm:flex-row sm:justify-between sm:items-start space-y-2 sm:space-y-0">
                  <div class="flex-1">
                    <h3 class="classic-quantity-option-title">{item.title}</h3>
                    <div class="classic-quantity-option-details flex flex-col sm:flex-row sm:items-center gap-1 sm:gap-2">
                      <div class="classic-quantity-unit-badge">
                        <span>{item.items === 1 ? "" : item.items}</span>
                        <span
                          data-translate={"quantityOptions.itemUnit.singular"}
                        />
                      </div>
                      <span class="hidden sm:inline">â€¢</span>
                      <div class="classic-quantity-price-info flex justify-start gap-1">
                        <span>{item.price_per_item}</span>
                        <span data-translate="productFunnel.currency" />
                        <span data-translate="quantityOptions.pricePerItem" />
                      </div>
                    </div>
                  </div>

                  <div class="text-left sm:text-right mt-2 sm:mt-0">
                    <div
                      class={`classic-quantity-final-price ${item.discount > 0 ? "classic-quantity-price-discount" : "classic-quantity-price-regular"}`}
                    >
                      {item.final_total.toLocaleString()}{" "}
                      {getTranslation("productFunnel.currency")}
                    </div>
                    {item.discount > 0 && (
                      <div class="flex flex-col items-start sm:items-end">
                        <div class="classic-quantity-original-price">
                          {item.original_total.toLocaleString()}{" "}
                          {getTranslation("productFunnel.currency")}
                        </div>
                        <div class="classic-quantity-discount-badge inline-flex items-center">
                          <svg
                            class="classic-quantity-discount-icon"
                            fill="currentColor"
                            viewBox="0 0 20 20"
                          >
                            <path
                              fill-rule="evenodd"
                              d="M10 18a8 8 0 100-16 8 8 0 000 16zm3.707-9.293a1 1 0 00-1.414-1.414L9 10.586 7.707 9.293a1 1 0 00-1.414 1.414l2 2a1 1 0 001.414 0l4-4z"
                              clip-rule="evenodd"
                            />
                          </svg>
                          <span class="ml-1">
                            {getTranslation("quantityOptions.saveDiscount")
                              .replace(
                                "{discountAmount}",
                                item.discount.toLocaleString() +
                                  " " +
                                  getTranslation("productFunnel.currency"),
                              )
                              .replace(
                                "{discountPercent}",
                                item.discount_percent,
                              )}
                          </span>
                        </div>
                      </div>
                    )}
                  </div>
                </div>
              </div>
            </label>
            <div
              class={`repeated-elements flex flex-col gap-1 ${index === 0 ? "" : "hidden"}`}
              data-option-id={`${name}${index + 1}`}
            >
              {[...Array(item.items)].map((_, panelIndex) => (
              <ClassicDynamicPannelContainer
                  key={panelIndex}
                  colorSizeOptions={colorSizeOptions}
                  panel-index={panelIndex + 1}
                />
              ))}
            </div>
          </div>
        </div>
      ))
    }
  </div>
</div>

<script>
  import "./ClassicQuantityOptions";
</script>
