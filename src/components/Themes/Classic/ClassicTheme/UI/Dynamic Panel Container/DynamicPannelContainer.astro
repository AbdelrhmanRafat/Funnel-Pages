---
import type { BlockData, OptionOption } from "../../../../../../lib/api/types";
import { getTranslation } from "../../../../../../lib/utils/i18n/translations";

const data: BlockData[] = Astro.props.data;
const colorSizeOptions: OptionOption[] = Astro.props.colorSizeOptions;

const colors: OptionOption | undefined = colorSizeOptions.find(opt => opt.name === 'color');
const sizes: OptionOption | undefined = colorSizeOptions.find(opt => opt.name === 'size');
---

<div id="panels-container" class="mt-8 space-y-6">
  {
    data.map((item, index) => (
      <div
        class={`option-panel bg-white p-8 rounded-3xl shadow-xl space-y-8 border border-blue-100 ${
          index === 0 ? '' : 'hidden'
        }`}
      >
        <!-- Updated Header with Selection Indicators -->
        <div class="flex justify-between items-center">
          <div class="text-blue-700 font-bold text-xl">
          <p class="inline" data-translate="dynamicPanel.selectOptionsForProduct">
          </p>
          <span>{index + 1}</span>
          </div>
          <div class="flex gap-2">
            <div class="bg-blue-100 px-3 py-1 rounded-full text-blue-700 text-sm flex items-center gap-1">
              <span data-translate="dynamicPanel.color">{getTranslation('dynamicPanel.color')}</span>
              <span class="selected-color" data-translate="dynamicPanel.notSelected">{getTranslation('dynamicPanel.notSelected')}</span>
            </div>
            <div class="bg-blue-100 px-3 py-1 rounded-full text-blue-700 text-sm flex items-center gap-1">
              <span data-translate="dynamicPanel.size">{getTranslation('dynamicPanel.size')}</span>
              <span class="selected-size" data-translate="dynamicPanel.notSelected">{getTranslation('dynamicPanel.notSelected')}</span>
            </div>
          </div>
        </div>

        <!-- Size Selection -->
        <div class="space-y-3">
          <p class="text-lg font-semibold text-gray-700" data-translate="dynamicPanel.size">{getTranslation('dynamicPanel.size')}</p>
          <div class="flex gap-4 flex-wrap">
            {
              Array.isArray(sizes?.value) && sizes.value.map(size => (
                <div
                  class="size-option px-5 py-2.5 border border-gray-300 rounded-xl cursor-pointer hover:bg-blue-50 hover:text-blue-700 transition-all shadow-sm text-sm font-medium text-gray-600"
                  data-value={size.value}
                >
                  {size.display}
                </div>
              ))
            }
          </div>
        </div>

        <!-- Color Selection -->
        <div class="space-y-3">
          <p class="text-lg font-semibold text-gray-700" data-translate="dynamicPanel.color">{getTranslation('dynamicPanel.color')}</p>
          <div class="flex gap-6 flex-wrap">
            {
              Array.isArray(colors?.value) && colors.value.map(color => (
                <div
                  class="color-option flex flex-col items-center gap-1 cursor-pointer hover:scale-105 transition-transform"
                  data-name={color.name}
                >
                  <div
                    class="w-9 h-9 rounded-full border-2 border-white shadow-md"
                    style={`background-color: ${color.hex}`}
                  ></div>
                  <span class="text-sm text-gray-600">{color.name}</span>
                </div>
              ))
            }
          </div>
        </div>
      </div>
    ))
  }
</div>

<script>
  import "./DynamicPannelContainer";
</script>