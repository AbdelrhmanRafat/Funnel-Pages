---
import "./ClassicSubmitOrderButton.css";
import ClassicModalPurchaseInfo from "../../ClassicModalPurchaseInfo/ClassicModalPurchaseInfo.astro";
import type { BlockData, Product } from "../../../../../../lib/api/types";
import { getTranslation } from "../../../../../../lib/utils/i18n/translations";

import ClassicSubmitOrderButtonDesign from "./ClassicSubmitOrderButtonDesign.tsx";

// Props passed to this Astro component, some were for the custom element, others for the modal.
const isHaveVariant : string = Astro.props.isHaveVariant;
const purchaseOptions: BlockData = Astro.props.purchaseOptions;
const product : Product = Astro.props.product;

// Get button text using i18n
const buttonText = getTranslation("form.submit", Astro.cookies.get("lang")?.value || "en");

// Props for the React button component.
// onClick and disabled state will be handled by the user later.
const buttonReactProps = {
  buttonText: buttonText,
  disabled: false, // Default static state
  // dataSubmitOrderButton: true, // This attribute was for the custom element's JS. Not needed if custom element is gone.
};

---
{/*
  The <classic-submit-order> custom element wrapper is removed.
  The validation logic from ClassicSubmitOrderButton.ts will be handled by the user later.
  We directly render the React button and the Modal.
*/}
<div>
  <ClassicSubmitOrderButtonDesign {...buttonReactProps} client:load />
</div>

{/* The modal component is still included as part of this component's output. */}
<ClassicModalPurchaseInfo isHaveVariant={isHaveVariant} purchaseOptions={purchaseOptions} product={product} />

{/*
  The <script> import for "./ClassicSubmitOrderButton.ts" is removed as per the new instruction.
  The .ts file will be deleted next.
*/}