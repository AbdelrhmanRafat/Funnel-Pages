---
// This component displays the main product details page for the Classic theme.
// It includes a gallery, product information (name, price, description), and purchase options.
// Props:
// - product: An object of type Product, containing all details about the product.
// - purchaseOptions: An object of type BlockData, containing data for the purchase options/funnel.
import "./ClassicThemeProduct.css";
import type {
    BlockData,
    OptionOption,
    Product,
} from "../../../../../lib/api/types";
import ClassicThemeProductFunnel from "../ClassicThemeProductFunnel/ClassicThemeProductFunnel.astro"; // Component for handling purchase options.
import "./ClassicThemeProduct.css"; // Styles specific to this component.
import { getTranslation } from "../../../../../lib/utils/i18n/translations";
import type { Language } from "../../../../../lib/utils/i18n/translations";
import ClassicThemeRates from "../ClassicThemeRates/ClassicThemeRates.astro";
import ClassicThemeFormFields from "../Classic_FormFields/ClassicThemeFormFields.astro";
import ClassicGalleryComponent from "../UI/ClassicGallery/ClassicGalleryComponent.astro";
import ClassicOrderConfirmationNotice from "../Classic_OrderConfirmationNotice/ClassicOrderConfirmationNotice.astro";

// Retrieves product and purchaseOptions from Astro's props.
const product: Product = Astro.props.product;
const purchaseOptions: BlockData = Astro.props.purchaseOptions;
const formFieldsData: BlockData = Astro.props.formFieldsData;
const ratingData: BlockData = Astro.props.ratingData;
const galleryData : BlockData = Astro.props.galleryData;
const orderConfirmationNoticeData : BlockData = Astro.props.orderConfirmationNoticeData;

// Extracts color and size options from the product data. Assumes options are structured in a specific way.
const colorSizeOptions: OptionOption[] = product.options[0].options;

// Get initial language from cookie during SSR
const currentLang: Language = (Astro.cookies.get("lang")?.value ||
    "en") as Language;
const isArabic = currentLang === "ar";
---

<section id="classic-product-details" class="classic-section">
    <div class="flex flex-col lg:flex-row gap-2">
        <!-- Gallery Section -->
        {
            galleryData && (
                <ClassicGalleryComponent data={galleryData} />
            )
        }
        <!-- Product Info Section -->
        <div class="lg:w-1/2 classic-product-info">
            {ratingData && <ClassicThemeRates ratingData={ratingData} />}
            
            <!-- Product Header: Contains availability, SKU, name, price -->
            <div class="classic-product-header">
                <div class="flex items-center gap-2 mb-3">
                    <span class={product.is_active ? "classic-badge-success" : "classic-badge-error"}
                        data-translate={product.is_active
                            ? "product.available"
                            : "product.notAvailable"}
                    >
                        {
                            product.is_active
                                ? getTranslation("product.available", currentLang)
                                : getTranslation("product.notAvailable", currentLang)
                        }
                    </span>
                    <div class="classic-product-sku">
                        <span data-translate="product.productCode">
                            {getTranslation("product.productCode", currentLang)}
                        </span>
                        <span>: {product.sku_code}</span>
                    </div>
                </div>

                <h2 class="classic-product-title">
                    {isArabic ? product.name_ar : product.name_en}
                </h2>

                <div class="classic-product-price">
                    {product.price} ج.م
                </div>
            </div>

            <!-- Product Description -->
            <div class="classic-product-description">
                <h3 class="classic-section-header" data-translate="product.description">
                    {getTranslation("product.description", currentLang)}
                </h3>
                <p
                    class="classic-text-body"
                    set:html={isArabic ? product.description_ar : product.description_en}
                />
            </div>

            <div class="flex flex-col gap-5">
                <!-- Purchase Options -->
                {
                    purchaseOptions && (
                        <ClassicThemeProductFunnel
                            data={purchaseOptions}
                            colorSizeOptions={colorSizeOptions}
                        />
                    )
                }
                {
                    formFieldsData && (
                        <ClassicThemeFormFields data={formFieldsData} />
                    )
                }
                {
                    orderConfirmationNoticeData && (
                        <ClassicOrderConfirmationNotice data={orderConfirmationNoticeData} />
                    )
                }
            </div>
        </div>
    </div>
</section>

<script>
    // Imports JavaScript functionalities specific to the ClassicThemeProduct component.
    import "./ClassicThemeProduct";
</script>
