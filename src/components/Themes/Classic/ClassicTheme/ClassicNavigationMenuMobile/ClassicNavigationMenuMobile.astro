---
import type { Data } from "../../../../../lib/api/types";
import { FunnelClassicComponents } from "../../../../../lib/constants/themes";
import { getClassicThemeComponent } from "../../../../../lib/utils/ThemeSelect";


const funnelPage: Data = Astro.props.funnelPage;


// Generate anchors from available components with comprehensive null checking
const availableAnchors = funnelPage?.blocks
  ?.map((block) => {
    // Check if block exists and has required properties
    if (!block || !block.name || !block.data) {
      return null;
    }

    const component = getClassicThemeComponent(block.name);
    
    // Check if component exists and has title from API
    if (component && block.data?.title) {
      return {
        component: component,
        componentData: block.data
      };
    }
    return null;
  })
  ?.filter((anchor): anchor is NonNullable<typeof anchor> => anchor !== null) || [];

// Order anchors based on render order
const RENDER_ORDER = [
  FunnelClassicComponents.ClassicProductFeatures,
  FunnelClassicComponents.ClassicProductPreview,
  FunnelClassicComponents.ClassicProductUsage,
  FunnelClassicComponents.ClassicTodayOrders,
  FunnelClassicComponents.Classic_Before_After,
  FunnelClassicComponents.ClassicReviews,
  FunnelClassicComponents.ClassicTextBar,
  FunnelClassicComponents.ClassicImageTextOverLay,
  FunnelClassicComponents.ClassicImageTextBeside,
  FunnelClassicComponents.ClassicFaq,
  FunnelClassicComponents.ClassicDeliveryFeatures,
];

// Safe filtering with additional null checks
const orderedAnchors = RENDER_ORDER
  .map(component => {
    const foundAnchor = availableAnchors.find(anchor => 
      anchor && anchor.component === component
    );
    return foundAnchor || null;
  })
  .filter((anchor): anchor is NonNullable<typeof anchor> => {
    // Ensure anchor exists and has required properties
    return (
      anchor !== null &&
      !!anchor.component &&
      !!anchor.componentData &&
      !!anchor.componentData.title &&
      typeof anchor.componentData.title === 'string' &&
      anchor.componentData.title.trim() !== ''
    );
  });
---
<!-- Mobile Navigation Menu Overlay - Only visible on mobile -->
 {orderedAnchors && orderedAnchors.length > 0 && (
    <div id="header-menu-overlay" class="classic-menu-overlay fixed inset-0 z-[60] md:hidden">
      <div class="classic-menu-backdrop absolute inset-0" id="header-menu-backdrop"></div>
      <div class="classic-menu-content absolute top-0 right-0 h-full w-80 max-w-[85vw] p-6">
        <!-- Menu Header -->
        <div class="flex justify-between items-center mb-6">
          <h3 class="classic-menu-title text-lg font-semibold">القائمة</h3>
          <button 
            id="header-menu-close"
            class="classic-menu-close p-2 rounded-lg transition-all duration-300"
            aria-label="Close menu"
          >
            <i class="fa-solid fa-times text-xl"></i>
          </button>
        </div>
        
        <!-- Menu Items with API Titles -->
        <nav class="classic-menu-nav">
          <ul class="flex flex-col gap-2">
            {orderedAnchors.map((anchor) => {
              // Additional safety check during rendering
              if (!anchor || !anchor.component || !anchor.componentData?.title) {
                return null;
              }
              
              return (
                <li>
                  <a 
                    href={`#${anchor.component}`}
                    class="classic-menu-link block px-4 py-3 rounded-lg text-sm font-medium transition-all duration-300"
                    data-anchor-target={anchor.componentData.title}
                  >
                    {anchor.componentData.title}
                  </a>
                </li>
              );
            })}
          </ul>
        </nav>
      </div>
    </div>
  )}