---
import type { Product, Value } from "../../../../Interfaces/Products";

const product = (Astro.props as { product: Product }).Product.product;
const colors = product.options?.[0]?.options?.[0]?.value ?? [];
const sizes = product.options?.[0]?.options?.[1]?.value ?? [];
---

<!-- Product Section -->
<div
    class="bg-white p-5 rounded-2xl shadow-2xl overflow-hidden border-2 border-gold max-w-4xl mx-auto"
>
    <!-- Product Image -->
    <div class="relative">
        <img
            src={product.image}
            alt={product.title}
            class="w-full h-96 object-contain bg-white"
        />
        <span
            class="absolute top-4 right-4 bg-green-700 text-white px-4 py-1.5 rounded-md text-sm font-bold border border-gold shadow"
        >
            متوفر
        </span>
    </div>

    <!-- Product Details -->
    <div class="p-8 space-y-8">
        <!-- Title and Slug -->
        <div class="flex items-center justify-between">
            <h2 class="text-3xl font-bold text-gray-800 font-serif">
                {product.name_ar}
            </h2>
            <span
                class="bg-gold text-white px-4 py-2 rounded-md text-sm font-bold shadow"
            >
                {product.slug_ar}
            </span>
        </div>

        <!-- Description -->
        <div class="text-right text-gray-700 leading-relaxed text-base">
            <div set:html={product.description_ar} />
        </div>

        <!-- Color Options -->
        <div>
            <label
                class="block text-lg font-semibold text-gray-800 mb-3 font-serif"
            >
                اللون:
            </label>
            <div class="flex flex-wrap gap-3">
                {
                    colors.map((color: Value, index: number) => (
                        <button
                            type="button"
                            title={color.name}
                            class="w-10 h-10 rounded-full shadow-md transition-transform duration-200 transform hover:scale-110 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-gold"
                            style={`background-color: ${color.hex};`}
                            data-color={color.name}
                        />
                    ))
                }
            </div>
        </div>

        <!-- Size Options -->
        <div>
            <label
                class="block text-lg font-semibold text-gray-800 mb-3 font-serif"
            >
                المقاس:
            </label>
            <div class="flex flex-wrap gap-4">
                {
                    sizes.map((size: Value, index: number) => (
                        <button
                            data-size={size.value}
                            class="px-5 py-2 min-w-[60px] text-center border-2 border-gold rounded-xl bg-white text-gray-800 hover:bg-gold  focus:border-burgundy font-serif font-medium text-lg transition-all duration-200 shadow-sm hover:shadow-md active:scale-95"
                        >
                            {size.display}
                        </button>
                    ))
                }
            </div>
        </div>

        <!-- Quantity -->
        <div>
            <label
                class="block text-lg font-semibold text-gray-800 mb-3 font-serif"
            >
                الكمية:
            </label>
            <div class="flex items-center gap-5">
                <!-- Decrease Button -->
                <button
                    onclick="decreaseQuantity()"
                    class="w-12 h-12 flex items-center justify-center bg-burgundy text-white rounded-full border-2 border-gold shadow-md hover:bg-red-900 active:scale-95 transition-transform"
                    aria-label="Decrease quantity"
                >
                    <span class="text-2xl font-bold">-</span>
                </button>

                <!-- Quantity Display -->
                <span
                    id="quantity"
                    class="min-w-[80px] px-6 py-3 border-2 border-gold rounded-lg text-center text-xl font-bold bg-cream shadow-inner"
                >
                    {product.qty}
                </span>

                <!-- Increase Button -->
                <button
                    onclick="increaseQuantity()"
                    class="w-12 h-12 flex items-center justify-center bg-burgundy text-white rounded-full border-2 border-gold shadow-md hover:bg-red-900 active:scale-95 transition-transform"
                    aria-label="Increase quantity"
                >
                    <span class="text-2xl font-bold">+</span>
                </button>
            </div>
        </div>

        <!-- Price Section -->
        <div class="text-center border-t-2 border-gold pt-6">
            <span class="text-4xl font-bold text-burgundy font-serif">
                {product.price_after_discount} ريال
            </span>
            <span class="text-xl text-gray-500 line-through mr-4 font-serif">
                {product.price} ريال
            </span>
        </div>
    </div>
</div>

<script>
  import { setColor, setSize } from "../../../../Services/orderService";

  // Handle color selection
  document.querySelectorAll('[data-color]').forEach(button => {
    button.addEventListener('click', (e) => {
      const color = (e.currentTarget as HTMLElement).dataset.color;
      if (color) {
        setColor(color);
        // Remove active state from all buttons
        document.querySelectorAll('[data-color]').forEach(btn => {
          btn.classList.remove('ring-2', 'ring-offset-2', 'ring-gold');
        });
        // Add active state to clicked button
        e.currentTarget.classList.add('ring-2', 'ring-offset-2', 'ring-gold');
      }
    });
  });

  // Handle size selection
  document.querySelectorAll('[data-size]').forEach(button => {
    button.addEventListener('click', (e) => {
      const size = (e.currentTarget as HTMLElement).dataset.size;
      if (size) {
        setSize(size);
        // Remove active state from all buttons
        document.querySelectorAll('[data-size]').forEach(btn => {
          btn.classList.remove('bg-gold', 'text-white');
          btn.classList.add('bg-white', 'text-gray-800');
        });
        // Add active state to clicked button
        e.currentTarget.classList.remove('bg-white', 'text-gray-800');
        e.currentTarget.classList.add('bg-gold', 'text-white');
      }
    });
  });
</script>