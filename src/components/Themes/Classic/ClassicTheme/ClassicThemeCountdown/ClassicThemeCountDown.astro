---
// This component displays a countdown timer for the Classic theme.
// It takes hours, minutes, and seconds from the API data and renders a visual timer.
// Props:
// - data: An object of type BlockData, containing the countdown timer values (hours, minutes, seconds).
import "./ClassicThemeCountDown.css";
import type { BlockData } from "../../../../../lib/api/types";
import { getTranslation } from "../../../../../lib/utils/i18n/translations";

const data: BlockData = Astro.props.data;
let totalSeconds = 0;

// Calculate the total seconds from the provided hours, minutes, and seconds.
if(data.hours != null && data.minutes != null && data.seconds != null)
{
  totalSeconds =
  (parseInt(data.hours?.toString() || '0') || 0) * 3600 +
  (parseInt(data.minutes?.toString() || '0' ) || 0) * 60 +
  (parseInt(data.seconds.toString() || '0' ) || 0);
}
---

<!-- Elegant Countdown Timer with proper spacing for fixed header -->
<section id="classic-countDown" class="classic-section">
  <div class="classic-countdown-container">
    <h2 class="classic-countdown-title" data-translate="countdown.offerEndsIn">
      {getTranslation('countdown.offerEndsIn')}
    </h2>
    
    <div
      class="classic-countdown-display"
      id="countdown"
      data-time={totalSeconds}
    >
      {/* Hours display block */}
      <div class="classic-countdown-block">
        <div class="classic-countdown-number" id="hours">--</div>
        <div class="classic-countdown-label" data-translate="countdown.hours">
          {getTranslation('countdown.hours')}
        </div>
      </div>
      
      {/* Minutes display block */}
      <div class="classic-countdown-block">
        <div class="classic-countdown-number" id="minutes">--</div>
        <div class="classic-countdown-label" data-translate="countdown.minutes">
          {getTranslation('countdown.minutes')}
        </div>
      </div>
      
      {/* Seconds display block */}
      <div class="classic-countdown-block">
        <div class="classic-countdown-number" id="seconds">--</div>
        <div class="classic-countdown-label" data-translate="countdown.seconds">
          {getTranslation('countdown.seconds')}
        </div>
      </div>
    </div>
  </div>
</section>

<script>
  import { initCountdown } from "./ClassicThemeCountDown";
  
  // Initialize countdown timer when DOM is loaded
  document.addEventListener('DOMContentLoaded', () => {
    // Start the countdown timer
    initCountdown();
    
    // Handle positioning relative to header
    const countdownSection = document.querySelector('.classic-countDown');
    const countdownContainer = document.querySelector('.countdown-container');
    
    if (countdownSection && countdownContainer) {
      const prevSibling = countdownSection.previousElementSibling;
      if (!prevSibling || prevSibling.tagName === 'HEADER') {
        countdownContainer.classList.add('after-header');
      }
    }
  });
</script>